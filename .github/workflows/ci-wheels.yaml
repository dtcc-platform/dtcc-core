name: Build and upload to PyPI

on:
  push:
    branches: [ develop ]
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels (cibuildwheel) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Upgrade pip + install cibuildwheel
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install cibuildwheel==2.22.0

      - name: Build wheels
        env:
          CIBW_BUILD: cp311-*
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_BEFORE_BUILD_LINUX: |
            dnf install -y dnf-plugins-core
            dnf install -y gcc gcc-c++ make
            python -m pip install --upgrade scikit-build-core cmake ninja
            python-config --includes
            export PYTHON_INCLUDE_DIR=$(python -c "from sysconfig import get_paths; print(get_paths()['include'])")
            export PYTHON_LIBRARY=$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")
            echo "Python include dir: $PYTHON_INCLUDE_DIR"
            echo "Python library: $PYTHON_LIBRARY"
          CIBW_ENVIRONMENT_LINUX: |
            PYTHON_INCLUDE_DIR=$(python -c "from sysconfig import get_paths; print(get_paths()['include'])")
            PYTHON_LIBRARY=$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")
            CMAKE_ARGS="-DPython3_ROOT_DIR=/opt/python/cp311-cp311 -DPython3_EXECUTABLE=/opt/python/cp311-cp311/bin/python -DPYTHON_INCLUDE_DIR=$PYTHON_INCLUDE_DIR -DPYTHON_LIBRARY=$PYTHON_LIBRARY"
        run: cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl
